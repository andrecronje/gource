// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/grpc.proto

package internal

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IN struct {
	// Types that are valid to be assigned to Event:
	//	*IN_Tx_
	//	*IN_Hash_
	Event                isIN_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *IN) Reset()         { *m = IN{} }
func (m *IN) String() string { return proto.CompactTextString(m) }
func (*IN) ProtoMessage()    {}
func (*IN) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{0}
}

func (m *IN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IN.Unmarshal(m, b)
}
func (m *IN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IN.Marshal(b, m, deterministic)
}
func (m *IN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IN.Merge(m, src)
}
func (m *IN) XXX_Size() int {
	return xxx_messageInfo_IN.Size(m)
}
func (m *IN) XXX_DiscardUnknown() {
	xxx_messageInfo_IN.DiscardUnknown(m)
}

var xxx_messageInfo_IN proto.InternalMessageInfo

type isIN_Event interface {
	isIN_Event()
}

type IN_Tx_ struct {
	Tx *IN_Tx `protobuf:"bytes,1,opt,name=tx,proto3,oneof"`
}

type IN_Hash_ struct {
	Hash *IN_Hash `protobuf:"bytes,2,opt,name=hash,proto3,oneof"`
}

func (*IN_Tx_) isIN_Event() {}

func (*IN_Hash_) isIN_Event() {}

func (m *IN) GetEvent() isIN_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *IN) GetTx() *IN_Tx {
	if x, ok := m.GetEvent().(*IN_Tx_); ok {
		return x.Tx
	}
	return nil
}

func (m *IN) GetHash() *IN_Hash {
	if x, ok := m.GetEvent().(*IN_Hash_); ok {
		return x.Hash
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*IN) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _IN_OneofMarshaler, _IN_OneofUnmarshaler, _IN_OneofSizer, []interface{}{
		(*IN_Tx_)(nil),
		(*IN_Hash_)(nil),
	}
}

func _IN_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*IN)
	// event
	switch x := m.Event.(type) {
	case *IN_Tx_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tx); err != nil {
			return err
		}
	case *IN_Hash_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hash); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("IN.Event has unexpected type %T", x)
	}
	return nil
}

func _IN_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*IN)
	switch tag {
	case 1: // event.tx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IN_Tx)
		err := b.DecodeMessage(msg)
		m.Event = &IN_Tx_{msg}
		return true, err
	case 2: // event.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IN_Hash)
		err := b.DecodeMessage(msg)
		m.Event = &IN_Hash_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _IN_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*IN)
	// event
	switch x := m.Event.(type) {
	case *IN_Tx_:
		s := proto.Size(x.Tx)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *IN_Hash_:
		s := proto.Size(x.Hash)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type IN_Tx struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IN_Tx) Reset()         { *m = IN_Tx{} }
func (m *IN_Tx) String() string { return proto.CompactTextString(m) }
func (*IN_Tx) ProtoMessage()    {}
func (*IN_Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{0, 0}
}

func (m *IN_Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IN_Tx.Unmarshal(m, b)
}
func (m *IN_Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IN_Tx.Marshal(b, m, deterministic)
}
func (m *IN_Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IN_Tx.Merge(m, src)
}
func (m *IN_Tx) XXX_Size() int {
	return xxx_messageInfo_IN_Tx.Size(m)
}
func (m *IN_Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_IN_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_IN_Tx proto.InternalMessageInfo

func (m *IN_Tx) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type IN_Hash struct {
	Uid []byte `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are valid to be assigned to Answer:
	//	*IN_Hash_Data
	//	*IN_Hash_Error
	Answer               isIN_Hash_Answer `protobuf_oneof:"answer"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IN_Hash) Reset()         { *m = IN_Hash{} }
func (m *IN_Hash) String() string { return proto.CompactTextString(m) }
func (*IN_Hash) ProtoMessage()    {}
func (*IN_Hash) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{0, 1}
}

func (m *IN_Hash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IN_Hash.Unmarshal(m, b)
}
func (m *IN_Hash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IN_Hash.Marshal(b, m, deterministic)
}
func (m *IN_Hash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IN_Hash.Merge(m, src)
}
func (m *IN_Hash) XXX_Size() int {
	return xxx_messageInfo_IN_Hash.Size(m)
}
func (m *IN_Hash) XXX_DiscardUnknown() {
	xxx_messageInfo_IN_Hash.DiscardUnknown(m)
}

var xxx_messageInfo_IN_Hash proto.InternalMessageInfo

func (m *IN_Hash) GetUid() []byte {
	if m != nil {
		return m.Uid
	}
	return nil
}

type isIN_Hash_Answer interface {
	isIN_Hash_Answer()
}

type IN_Hash_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type IN_Hash_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*IN_Hash_Data) isIN_Hash_Answer() {}

func (*IN_Hash_Error) isIN_Hash_Answer() {}

func (m *IN_Hash) GetAnswer() isIN_Hash_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *IN_Hash) GetData() []byte {
	if x, ok := m.GetAnswer().(*IN_Hash_Data); ok {
		return x.Data
	}
	return nil
}

func (m *IN_Hash) GetError() string {
	if x, ok := m.GetAnswer().(*IN_Hash_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*IN_Hash) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _IN_Hash_OneofMarshaler, _IN_Hash_OneofUnmarshaler, _IN_Hash_OneofSizer, []interface{}{
		(*IN_Hash_Data)(nil),
		(*IN_Hash_Error)(nil),
	}
}

func _IN_Hash_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*IN_Hash)
	// answer
	switch x := m.Answer.(type) {
	case *IN_Hash_Data:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Data)
	case *IN_Hash_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Error)
	case nil:
	default:
		return fmt.Errorf("IN_Hash.Answer has unexpected type %T", x)
	}
	return nil
}

func _IN_Hash_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*IN_Hash)
	switch tag {
	case 2: // answer.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Answer = &IN_Hash_Data{x}
		return true, err
	case 3: // answer.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Answer = &IN_Hash_Error{x}
		return true, err
	default:
		return false, nil
	}
}

func _IN_Hash_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*IN_Hash)
	// answer
	switch x := m.Answer.(type) {
	case *IN_Hash_Data:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Data)))
		n += len(x.Data)
	case *IN_Hash_Error:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Error)))
		n += len(x.Error)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OUT struct {
	// Types that are valid to be assigned to Event:
	//	*OUT_Block_
	//	*OUT_Query_
	//	*OUT_Restore_
	Event                isOUT_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OUT) Reset()         { *m = OUT{} }
func (m *OUT) String() string { return proto.CompactTextString(m) }
func (*OUT) ProtoMessage()    {}
func (*OUT) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{1}
}

func (m *OUT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OUT.Unmarshal(m, b)
}
func (m *OUT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OUT.Marshal(b, m, deterministic)
}
func (m *OUT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OUT.Merge(m, src)
}
func (m *OUT) XXX_Size() int {
	return xxx_messageInfo_OUT.Size(m)
}
func (m *OUT) XXX_DiscardUnknown() {
	xxx_messageInfo_OUT.DiscardUnknown(m)
}

var xxx_messageInfo_OUT proto.InternalMessageInfo

type isOUT_Event interface {
	isOUT_Event()
}

type OUT_Block_ struct {
	Block *OUT_Block `protobuf:"bytes,1,opt,name=block,proto3,oneof"`
}

type OUT_Query_ struct {
	Query *OUT_Query `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

type OUT_Restore_ struct {
	Restore *OUT_Restore `protobuf:"bytes,3,opt,name=restore,proto3,oneof"`
}

func (*OUT_Block_) isOUT_Event() {}

func (*OUT_Query_) isOUT_Event() {}

func (*OUT_Restore_) isOUT_Event() {}

func (m *OUT) GetEvent() isOUT_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *OUT) GetBlock() *OUT_Block {
	if x, ok := m.GetEvent().(*OUT_Block_); ok {
		return x.Block
	}
	return nil
}

func (m *OUT) GetQuery() *OUT_Query {
	if x, ok := m.GetEvent().(*OUT_Query_); ok {
		return x.Query
	}
	return nil
}

func (m *OUT) GetRestore() *OUT_Restore {
	if x, ok := m.GetEvent().(*OUT_Restore_); ok {
		return x.Restore
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OUT) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OUT_OneofMarshaler, _OUT_OneofUnmarshaler, _OUT_OneofSizer, []interface{}{
		(*OUT_Block_)(nil),
		(*OUT_Query_)(nil),
		(*OUT_Restore_)(nil),
	}
}

func _OUT_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OUT)
	// event
	switch x := m.Event.(type) {
	case *OUT_Block_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Block); err != nil {
			return err
		}
	case *OUT_Query_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Query); err != nil {
			return err
		}
	case *OUT_Restore_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Restore); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OUT.Event has unexpected type %T", x)
	}
	return nil
}

func _OUT_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OUT)
	switch tag {
	case 1: // event.block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OUT_Block)
		err := b.DecodeMessage(msg)
		m.Event = &OUT_Block_{msg}
		return true, err
	case 2: // event.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OUT_Query)
		err := b.DecodeMessage(msg)
		m.Event = &OUT_Query_{msg}
		return true, err
	case 3: // event.restore
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OUT_Restore)
		err := b.DecodeMessage(msg)
		m.Event = &OUT_Restore_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OUT_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OUT)
	// event
	switch x := m.Event.(type) {
	case *OUT_Block_:
		s := proto.Size(x.Block)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OUT_Query_:
		s := proto.Size(x.Query)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OUT_Restore_:
		s := proto.Size(x.Restore)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OUT_Block struct {
	Uid                  []byte   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OUT_Block) Reset()         { *m = OUT_Block{} }
func (m *OUT_Block) String() string { return proto.CompactTextString(m) }
func (*OUT_Block) ProtoMessage()    {}
func (*OUT_Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{1, 0}
}

func (m *OUT_Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OUT_Block.Unmarshal(m, b)
}
func (m *OUT_Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OUT_Block.Marshal(b, m, deterministic)
}
func (m *OUT_Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OUT_Block.Merge(m, src)
}
func (m *OUT_Block) XXX_Size() int {
	return xxx_messageInfo_OUT_Block.Size(m)
}
func (m *OUT_Block) XXX_DiscardUnknown() {
	xxx_messageInfo_OUT_Block.DiscardUnknown(m)
}

var xxx_messageInfo_OUT_Block proto.InternalMessageInfo

func (m *OUT_Block) GetUid() []byte {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *OUT_Block) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type OUT_Query struct {
	Uid                  []byte   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OUT_Query) Reset()         { *m = OUT_Query{} }
func (m *OUT_Query) String() string { return proto.CompactTextString(m) }
func (*OUT_Query) ProtoMessage()    {}
func (*OUT_Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{1, 1}
}

func (m *OUT_Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OUT_Query.Unmarshal(m, b)
}
func (m *OUT_Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OUT_Query.Marshal(b, m, deterministic)
}
func (m *OUT_Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OUT_Query.Merge(m, src)
}
func (m *OUT_Query) XXX_Size() int {
	return xxx_messageInfo_OUT_Query.Size(m)
}
func (m *OUT_Query) XXX_DiscardUnknown() {
	xxx_messageInfo_OUT_Query.DiscardUnknown(m)
}

var xxx_messageInfo_OUT_Query proto.InternalMessageInfo

func (m *OUT_Query) GetUid() []byte {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *OUT_Query) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type OUT_Restore struct {
	Uid                  []byte   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OUT_Restore) Reset()         { *m = OUT_Restore{} }
func (m *OUT_Restore) String() string { return proto.CompactTextString(m) }
func (*OUT_Restore) ProtoMessage()    {}
func (*OUT_Restore) Descriptor() ([]byte, []int) {
	return fileDescriptor_755bafbdfacf1aa5, []int{1, 2}
}

func (m *OUT_Restore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OUT_Restore.Unmarshal(m, b)
}
func (m *OUT_Restore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OUT_Restore.Marshal(b, m, deterministic)
}
func (m *OUT_Restore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OUT_Restore.Merge(m, src)
}
func (m *OUT_Restore) XXX_Size() int {
	return xxx_messageInfo_OUT_Restore.Size(m)
}
func (m *OUT_Restore) XXX_DiscardUnknown() {
	xxx_messageInfo_OUT_Restore.DiscardUnknown(m)
}

var xxx_messageInfo_OUT_Restore proto.InternalMessageInfo

func (m *OUT_Restore) GetUid() []byte {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *OUT_Restore) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*IN)(nil), "internal.IN")
	proto.RegisterType((*IN_Tx)(nil), "internal.IN.Tx")
	proto.RegisterType((*IN_Hash)(nil), "internal.IN.Hash")
	proto.RegisterType((*OUT)(nil), "internal.OUT")
	proto.RegisterType((*OUT_Block)(nil), "internal.OUT.Block")
	proto.RegisterType((*OUT_Query)(nil), "internal.OUT.Query")
	proto.RegisterType((*OUT_Restore)(nil), "internal.OUT.Restore")
}

func init() { proto.RegisterFile("internal/grpc.proto", fileDescriptor_755bafbdfacf1aa5) }

var fileDescriptor_755bafbdfacf1aa5 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x4e, 0xc2, 0x30,
	0x18, 0xc5, 0xf7, 0x87, 0x31, 0xfc, 0x98, 0x51, 0x8b, 0x9a, 0x65, 0x57, 0xc8, 0x8d, 0x24, 0xea,
	0x50, 0xbc, 0xf5, 0x0a, 0x6f, 0x46, 0x62, 0x40, 0x9b, 0xf1, 0x00, 0x65, 0x6b, 0xdc, 0x22, 0x69,
	0xb1, 0x2b, 0x3a, 0xdf, 0xc9, 0xd7, 0xf0, 0xbd, 0x4c, 0xcb, 0x50, 0x66, 0xb8, 0xf0, 0xae, 0xdf,
	0xce, 0x2f, 0xe7, 0xf4, 0x7c, 0x2b, 0x74, 0x72, 0x26, 0xa9, 0x60, 0x64, 0x31, 0x78, 0x16, 0xcb,
	0x24, 0x5c, 0x0a, 0x2e, 0x39, 0x6a, 0x6d, 0x3e, 0xf6, 0xbe, 0x4c, 0xb0, 0xc6, 0x13, 0x74, 0x06,
	0x96, 0x2c, 0x7d, 0xb3, 0x6b, 0xf6, 0xdb, 0xc3, 0x83, 0x70, 0xa3, 0x86, 0xe3, 0x49, 0x18, 0x97,
	0x91, 0x81, 0x2d, 0x59, 0xa2, 0x73, 0x68, 0x64, 0xa4, 0xc8, 0x7c, 0x4b, 0x43, 0x47, 0x35, 0x28,
	0x22, 0x45, 0x16, 0x19, 0x58, 0x03, 0x81, 0x0f, 0x56, 0x5c, 0x22, 0x04, 0x8d, 0x94, 0x48, 0xa2,
	0x3d, 0x3d, 0xac, 0xcf, 0xc1, 0x23, 0x34, 0x14, 0x89, 0x0e, 0xc1, 0x5e, 0xe5, 0x69, 0x25, 0xa9,
	0x23, 0x3a, 0xae, 0x68, 0x65, 0xee, 0x29, 0x27, 0x35, 0xa1, 0x53, 0x70, 0xa8, 0x10, 0x5c, 0xf8,
	0x76, 0xd7, 0xec, 0xef, 0x45, 0x06, 0x5e, 0x8f, 0xa3, 0x16, 0x34, 0x09, 0x2b, 0xde, 0xa9, 0x18,
	0xb9, 0xe0, 0xd0, 0x37, 0xca, 0x64, 0xef, 0xd3, 0x02, 0x7b, 0x3a, 0x8b, 0xd1, 0x05, 0x38, 0xf3,
	0x05, 0x4f, 0x5e, 0xaa, 0x2e, 0x9d, 0xdf, 0x6b, 0x4e, 0x67, 0x71, 0x38, 0x52, 0x92, 0xf2, 0xd1,
	0x8c, 0x82, 0x5f, 0x57, 0x54, 0x7c, 0x54, 0x9d, 0xfe, 0xc0, 0x4f, 0x4a, 0x52, 0xb0, 0x66, 0xd0,
	0x0d, 0xb8, 0x82, 0x16, 0x92, 0x0b, 0xaa, 0xaf, 0xd3, 0x1e, 0x9e, 0xd4, 0x71, 0xbc, 0x16, 0x23,
	0x03, 0x6f, 0xb8, 0xe0, 0x0a, 0x1c, 0x9d, 0xb8, 0xa3, 0x30, 0xda, 0x2e, 0x5c, 0xad, 0x67, 0x00,
	0x8e, 0xce, 0xdc, 0xb9, 0x1f, 0x27, 0x67, 0x29, 0x2d, 0x35, 0x6f, 0xe3, 0xf5, 0x10, 0x0c, 0xc0,
	0xad, 0x52, 0xff, 0x97, 0xf0, 0xb3, 0xae, 0xe1, 0x1d, 0x78, 0x0f, 0x24, 0xc9, 0x68, 0x91, 0x17,
	0x13, 0x9e, 0x52, 0x74, 0x09, 0xee, 0x3d, 0x67, 0x8c, 0x26, 0x12, 0x79, 0xdb, 0x7f, 0x36, 0xd8,
	0xaf, 0x95, 0xec, 0x19, 0x7d, 0xf3, 0xda, 0x9c, 0x37, 0xf5, 0x2b, 0xba, 0xfd, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0xdc, 0xa1, 0x1b, 0x5c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LachesisNodeClient is the client API for LachesisNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LachesisNodeClient interface {
	Connect(ctx context.Context, opts ...grpc.CallOption) (LachesisNode_ConnectClient, error)
}

type lachesisNodeClient struct {
	cc *grpc.ClientConn
}

func NewLachesisNodeClient(cc *grpc.ClientConn) LachesisNodeClient {
	return &lachesisNodeClient{cc}
}

func (c *lachesisNodeClient) Connect(ctx context.Context, opts ...grpc.CallOption) (LachesisNode_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LachesisNode_serviceDesc.Streams[0], "/internal.LachesisNode/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &lachesisNodeConnectClient{stream}
	return x, nil
}

type LachesisNode_ConnectClient interface {
	Send(*IN) error
	Recv() (*OUT, error)
	grpc.ClientStream
}

type lachesisNodeConnectClient struct {
	grpc.ClientStream
}

func (x *lachesisNodeConnectClient) Send(m *IN) error {
	return x.ClientStream.SendMsg(m)
}

func (x *lachesisNodeConnectClient) Recv() (*OUT, error) {
	m := new(OUT)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LachesisNodeServer is the server API for LachesisNode service.
type LachesisNodeServer interface {
	Connect(LachesisNode_ConnectServer) error
}

func RegisterLachesisNodeServer(s *grpc.Server, srv LachesisNodeServer) {
	s.RegisterService(&_LachesisNode_serviceDesc, srv)
}

func _LachesisNode_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LachesisNodeServer).Connect(&lachesisNodeConnectServer{stream})
}

type LachesisNode_ConnectServer interface {
	Send(*OUT) error
	Recv() (*IN, error)
	grpc.ServerStream
}

type lachesisNodeConnectServer struct {
	grpc.ServerStream
}

func (x *lachesisNodeConnectServer) Send(m *OUT) error {
	return x.ServerStream.SendMsg(m)
}

func (x *lachesisNodeConnectServer) Recv() (*IN, error) {
	m := new(IN)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LachesisNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.LachesisNode",
	HandlerType: (*LachesisNodeServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _LachesisNode_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "internal/grpc.proto",
}
